{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Capstone Project\n",
    "## Image classifier for the SVHN dataset\n",
    "### Instructions\n",
    "\n",
    "In this notebook, you will create a neural network that classifies real-world images digits. You will use concepts from throughout this course in building, training, testing, validating and saving your Tensorflow classifier model.\n",
    "\n",
    "This project is peer-assessed. Within this notebook you will find instructions in each section for how to complete the project. Pay close attention to the instructions as the peer review will be carried out according to a grading rubric that checks key parts of the project instructions. Feel free to add extra cells into the notebook as required.\n",
    "\n",
    "### How to submit\n",
    "\n",
    "When you have completed the Capstone project notebook, you will submit a pdf of the notebook for peer review. First ensure that the notebook has been fully executed from beginning to end, and all of the cell outputs are visible. This is important, as the grading rubric depends on the reviewer being able to view the outputs of your notebook. Save the notebook as a pdf (File -> Download as -> PDF via LaTeX). You should then submit this pdf for review.\n",
    "\n",
    "### Let's get started!\n",
    "\n",
    "We'll start by running some imports, and loading the dataset. For this project you are free to make further imports throughout the notebook as you wish. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from scipy.io import loadmat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![SVHN overview image](data/svhn_examples.jpg)\n",
    "For the capstone project, you will use the [SVHN dataset](http://ufldl.stanford.edu/housenumbers/). This is an  image dataset of over 600,000 digit images in all, and is a harder dataset than MNIST as the numbers appear in the context of natural scene images. SVHN is obtained from house numbers in Google Street View images. \n",
    "\n",
    "* Y. Netzer, T. Wang, A. Coates, A. Bissacco, B. Wu and A. Y. Ng. \"Reading Digits in Natural Images with Unsupervised Feature Learning\". NIPS Workshop on Deep Learning and Unsupervised Feature Learning, 2011.\n",
    "\n",
    "Your goal is to develop an end-to-end workflow for building, training, validating, evaluating and saving a neural network that classifies a real-world image into one of ten classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run this cell to load the dataset\n",
    "\n",
    "train = loadmat('data/train_32x32.mat')\n",
    "test = loadmat('data/test_32x32.mat')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Both `train` and `test` are dictionaries with keys `X` and `y` for the input images and labels respectively."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Inspect and preprocess the dataset\n",
    "* Extract the training and testing images and labels separately from the train and test dictionaries loaded for you.\n",
    "* Select a random sample of images and corresponding labels from the dataset (at least 10), and display them in a figure.\n",
    "* Convert the training and test images to grayscale by taking the average across all colour channels for each pixel. _Hint: retain the channel dimension, which will now have size 1._\n",
    "* Select a random sample of the grayscale images and corresponding labels from the dataset (at least 10), and display them in a figure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Extracting data\n",
    "X_train = train['X']\n",
    "y_train = train['y']\n",
    "\n",
    "X_test = test['X']\n",
    "y_test = test['y']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 1  2  3  4  5  6  7  8  9 10]\n",
      "(32, 32, 3, 73257)\n",
      "(73257, 1)\n"
     ]
    }
   ],
   "source": [
    "#Understanding some data details\n",
    "import numpy as np\n",
    "\n",
    "print(np.unique(y_train))\n",
    "print(X_train.shape)\n",
    "print(y_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 10 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Showing some random data and their classes\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "random_images = np.random.randint(y_train.shape[0], size=10)\n",
    "\n",
    "fig, ax = plt.subplots(2, 5, figsize=(9, 6))\n",
    "for i, j in zip(range(10), random_images):\n",
    "    ax[i//5, i%5].imshow(X_train[:, :, :, j])\n",
    "    ax[i//5, i%5].axis('off')\n",
    "    ax[i//5, i%5].set_title('Class: {}'.format(y_train[j, 0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x7f90b06bf588>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Confirming that class 10 is actually the digit '0'\n",
    "plt.imshow(X_train[:, :, :, np.where(y_train[:, 0]==10)[0][0]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(73257, 1)\n",
      "(26032, 1)\n"
     ]
    }
   ],
   "source": [
    "#Encoding class 10 to class 0\n",
    "lista_y_train = np.where(y_train[:, 0]==10)\n",
    "y_train[lista_y_train[0], 0] = 0\n",
    "\n",
    "lista_y_test = np.where(y_test[:, 0]==10)\n",
    "y_test[lista_y_test[0], 0] = 0\n",
    "\n",
    "print(y_train.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(32, 32, 1, 73257)\n",
      "(32, 32, 1, 26032)\n",
      "\n",
      "(32, 32, 73257)\n",
      "(32, 32, 26032)\n"
     ]
    }
   ],
   "source": [
    "#Generating grey data - with and without additional dimension\n",
    "X_train_grey = np.mean(X_train[:, :, :, :], axis=2, keepdims=True)\n",
    "X_test_grey = np.mean(X_test[:, :, :, :], axis=2, keepdims=True)\n",
    "print(X_train_grey.shape)\n",
    "print(X_test_grey.shape)\n",
    "print()\n",
    "\n",
    "X_train_grey_without_dim = np.mean(X_train[:, :, :, :], axis=2)\n",
    "X_test_grey_without_dim = np.mean(X_test[:, :, :, :], axis=2)\n",
    "print(X_train_grey_without_dim.shape)\n",
    "print(X_test_grey_without_dim.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 10 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Showing the grey version of the images aleready showed\n",
    "fig, ax = plt.subplots(2, 5, figsize=(9, 6))\n",
    "for i, j in zip(range(10), random_images):\n",
    "    ax[i//5, i%5].imshow(X_train_grey_without_dim[:, :, j], cmap='gray')\n",
    "    ax[i//5, i%5].axis('off')\n",
    "    ax[i//5, i%5].set_title('Class: {}'.format(y_train[j, 0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(73257, 10)\n",
      "(26032, 10)\n"
     ]
    }
   ],
   "source": [
    "#Encoding labels to array format. This way we can use categorical crossentropy\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "\n",
    "ohe = OneHotEncoder(sparse=False)\n",
    "\n",
    "ohe.fit(y_train)\n",
    "y_train = ohe.transform(y_train)\n",
    "y_test = ohe.transform(y_test)\n",
    "\n",
    "print(y_train.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(73257, 32, 32, 3)\n",
      "(26032, 32, 32, 3)\n"
     ]
    }
   ],
   "source": [
    "#Fixing the dimensions to be able to use the arrays on the model.fit method later\n",
    "X_train = np.moveaxis(X_train, -1, 0)\n",
    "X_test = np.moveaxis(X_test, -1, 0)\n",
    "\n",
    "print(X_train.shape)\n",
    "print(X_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. MLP neural network classifier\n",
    "* Build an MLP classifier model using the Sequential API. Your model should use only Flatten and Dense layers, with the final layer having a 10-way softmax output. \n",
    "* You should design and build the model yourself. Feel free to experiment with different MLP architectures. _Hint: to achieve a reasonable accuracy you won't need to use more than 4 or 5 layers._\n",
    "* Print out the model summary (using the summary() method)\n",
    "* Compile and train the model (we recommend a maximum of 30 epochs), making use of both training and validation sets during the training run. \n",
    "* Your model should track at least one appropriate metric, and use at least two callbacks during training, one of which should be a ModelCheckpoint callback.\n",
    "* As a guide, you should aim to achieve a final categorical cross entropy training loss of less than 1.0 (the validation loss might be higher).\n",
    "* Plot the learning curves for loss vs epoch and accuracy vs epoch for both training and validation sets.\n",
    "* Compute and display the loss and accuracy of the trained model on the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "flatten (Flatten)            (None, 3072)              0         \n",
      "_________________________________________________________________\n",
      "dense (Dense)                (None, 512)               1573376   \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 256)               131328    \n",
      "_________________________________________________________________\n",
      "dense_2 (Dense)              (None, 256)               65792     \n",
      "_________________________________________________________________\n",
      "dense_3 (Dense)              (None, 128)               32896     \n",
      "_________________________________________________________________\n",
      "dense_4 (Dense)              (None, 64)                8256      \n",
      "_________________________________________________________________\n",
      "dense_5 (Dense)              (None, 10)                650       \n",
      "=================================================================\n",
      "Total params: 1,812,298\n",
      "Trainable params: 1,812,298\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "#Creating, compiling and analysing the model\n",
    "from tensorflow.keras import Sequential, optimizers\n",
    "from tensorflow.keras.layers import Flatten, Dense\n",
    "\n",
    "model = Sequential([\n",
    "    Flatten(input_shape=X_train.shape[1:]),\n",
    "    Dense(512, activation='relu'),\n",
    "    Dense(256, activation='relu'),\n",
    "    Dense(256, activation='relu'),\n",
    "    Dense(128, activation='relu'),\n",
    "    Dense(64, activation='relu'),\n",
    "    Dense(10, activation='softmax')\n",
    "])\n",
    "\n",
    "opt = optimizers.Adam(learning_rate=1e-3)\n",
    "\n",
    "model.compile(optimizer=opt,\n",
    "              loss='categorical_crossentropy',\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 62268 samples, validate on 10989 samples\n",
      "Epoch 1/20\n",
      "\n",
      "Epoch 00001: val_loss improved from inf to 2.50603, saving model to best_checkpoint\n",
      "62268/62268 - 66s - loss: 16.2051 - accuracy: 0.1435 - val_loss: 2.5060 - val_accuracy: 0.1926\n",
      "Epoch 2/20\n",
      "\n",
      "Epoch 00002: val_loss improved from 2.50603 to 2.06870, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 2.1772 - accuracy: 0.2596 - val_loss: 2.0687 - val_accuracy: 0.3097\n",
      "Epoch 3/20\n",
      "\n",
      "Epoch 00003: val_loss improved from 2.06870 to 1.53449, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.7221 - accuracy: 0.4291 - val_loss: 1.5345 - val_accuracy: 0.5056\n",
      "Epoch 4/20\n",
      "\n",
      "Epoch 00004: val_loss improved from 1.53449 to 1.26713, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.4035 - accuracy: 0.5538 - val_loss: 1.2671 - val_accuracy: 0.6021\n",
      "Epoch 5/20\n",
      "\n",
      "Epoch 00005: val_loss improved from 1.26713 to 1.18863, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.3219 - accuracy: 0.5895 - val_loss: 1.1886 - val_accuracy: 0.6364\n",
      "Epoch 6/20\n",
      "\n",
      "Epoch 00006: val_loss improved from 1.18863 to 1.18807, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.2084 - accuracy: 0.6276 - val_loss: 1.1881 - val_accuracy: 0.6377\n",
      "Epoch 7/20\n",
      "\n",
      "Epoch 00007: val_loss improved from 1.18807 to 1.16592, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.1460 - accuracy: 0.6464 - val_loss: 1.1659 - val_accuracy: 0.6550\n",
      "Epoch 8/20\n",
      "\n",
      "Epoch 00008: val_loss improved from 1.16592 to 1.04891, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.1189 - accuracy: 0.6582 - val_loss: 1.0489 - val_accuracy: 0.6740\n",
      "Epoch 9/20\n",
      "\n",
      "Epoch 00009: val_loss did not improve from 1.04891\n",
      "62268/62268 - 62s - loss: 1.0997 - accuracy: 0.6618 - val_loss: 1.1346 - val_accuracy: 0.6451\n",
      "Epoch 10/20\n",
      "\n",
      "Epoch 00010: val_loss improved from 1.04891 to 1.03209, saving model to best_checkpoint\n",
      "62268/62268 - 60s - loss: 1.0446 - accuracy: 0.6782 - val_loss: 1.0321 - val_accuracy: 0.6779\n",
      "Epoch 11/20\n",
      "\n",
      "Epoch 00011: val_loss improved from 1.03209 to 1.00250, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 1.0095 - accuracy: 0.6883 - val_loss: 1.0025 - val_accuracy: 0.6906\n",
      "Epoch 12/20\n",
      "\n",
      "Epoch 00012: val_loss improved from 1.00250 to 0.94481, saving model to best_checkpoint\n",
      "62268/62268 - 62s - loss: 0.9679 - accuracy: 0.7040 - val_loss: 0.9448 - val_accuracy: 0.7175\n",
      "Epoch 13/20\n",
      "\n",
      "Epoch 00013: val_loss did not improve from 0.94481\n",
      "62268/62268 - 60s - loss: 0.9568 - accuracy: 0.7070 - val_loss: 1.0008 - val_accuracy: 0.6899\n",
      "Epoch 14/20\n",
      "\n",
      "Epoch 00014: val_loss improved from 0.94481 to 0.92803, saving model to best_checkpoint\n",
      "62268/62268 - 59s - loss: 0.9336 - accuracy: 0.7122 - val_loss: 0.9280 - val_accuracy: 0.7141\n",
      "Epoch 15/20\n",
      "\n",
      "Epoch 00015: val_loss improved from 0.92803 to 0.91250, saving model to best_checkpoint\n",
      "62268/62268 - 61s - loss: 0.8981 - accuracy: 0.7265 - val_loss: 0.9125 - val_accuracy: 0.7214\n",
      "Epoch 16/20\n",
      "\n",
      "Epoch 00016: val_loss did not improve from 0.91250\n",
      "62268/62268 - 63s - loss: 0.8942 - accuracy: 0.7257 - val_loss: 0.9963 - val_accuracy: 0.6983\n",
      "Epoch 17/20\n",
      "\n",
      "Epoch 00017: val_loss did not improve from 0.91250\n",
      "62268/62268 - 61s - loss: 0.8691 - accuracy: 0.7336 - val_loss: 0.9179 - val_accuracy: 0.7235\n",
      "Epoch 18/20\n",
      "\n",
      "Epoch 00018: val_loss did not improve from 0.91250\n",
      "62268/62268 - 61s - loss: 0.8707 - accuracy: 0.7340 - val_loss: 0.9197 - val_accuracy: 0.7162\n",
      "Epoch 00018: early stopping\n"
     ]
    }
   ],
   "source": [
    "#Creating callback functions and fitting the data with the model\n",
    "from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n",
    "\n",
    "early_stopping = EarlyStopping(monitor='val_loss', min_delta=1e-5,\n",
    "                               patience=3, verbose=2)\n",
    "\n",
    "best_check = ModelCheckpoint('best_checkpoint', monitor='val_loss', verbose=2,\n",
    "                               save_best_only=True, save_weights_only=True)\n",
    "\n",
    "\n",
    "history = model.fit(x=X_train, y=y_train, epochs=20, batch_size=128,\n",
    "          verbose=2, validation_split=0.15, callbacks=[early_stopping, best_check])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " best_checkpoint\t\t\t best_checkpoint.index\r\n",
      " best_checkpoint_2\t\t\t'Capstone Project.ipynb'\r\n",
      " best_checkpoint_2.data-00000-of-00001\t checkpoint\r\n",
      " best_checkpoint_2.index\t\t data\r\n",
      " best_checkpoint.data-00000-of-00001\r\n"
     ]
    }
   ],
   "source": [
    "#Checking the creation of the best_checkpoint file\n",
    "! ls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f916fc9d2e8>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the loss of the training and validating sets to look for some overfitting pattern\n",
    "import pandas as pd\n",
    "\n",
    "df = pd.DataFrame(history.history)\n",
    "df.plot(y=['loss', 'val_loss'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f90b47d7940>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the accuracy of the training and validating sets to look for some overfitting pattern\n",
    "df.plot(y=['accuracy', 'val_accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(60.0, 0.5, 'Prediction')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the confusion matrix to visualize the model quality\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(9, 6))\n",
    "sns.heatmap(tf.math.confusion_matrix(np.argmax(model.predict(X_test), axis=1), np.argmax(y_test, axis=1)))\n",
    "plt.xlabel('Label')\n",
    "plt.ylabel('Prediction')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "26032/1 - 10s - loss: 1.0228 - accuracy: 0.7096\n",
      "Test Loss and Test Accuracy for the model: 1.001450748112426, 0.7095881700515747\n"
     ]
    }
   ],
   "source": [
    "#Measuring test loss and accuracy of the model\n",
    "loss, accuracy = model.evaluate(x=X_test, y=y_test, batch_size=128, verbose=2)\n",
    "print('Test Loss and Test Accuracy for the model: {}, {}'.format(loss, accuracy))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. CNN neural network classifier\n",
    "* Build a CNN classifier model using the Sequential API. Your model should use the Conv2D, MaxPool2D, BatchNormalization, Flatten, Dense and Dropout layers. The final layer should again have a 10-way softmax output. \n",
    "* You should design and build the model yourself. Feel free to experiment with different CNN architectures. _Hint: to achieve a reasonable accuracy you won't need to use more than 2 or 3 convolutional layers and 2 fully connected layers.)_\n",
    "* The CNN model should use fewer trainable parameters than your MLP model.\n",
    "* Compile and train the model (we recommend a maximum of 30 epochs), making use of both training and validation sets during the training run.\n",
    "* Your model should track at least one appropriate metric, and use at least two callbacks during training, one of which should be a ModelCheckpoint callback.\n",
    "* You should aim to beat the MLP model performance with fewer parameters!\n",
    "* Plot the learning curves for loss vs epoch and accuracy vs epoch for both training and validation sets.\n",
    "* Compute and display the loss and accuracy of the trained model on the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_1\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "conv2d (Conv2D)              (None, 30, 30, 16)        448       \n",
      "_________________________________________________________________\n",
      "batch_normalization (BatchNo (None, 30, 30, 16)        64        \n",
      "_________________________________________________________________\n",
      "max_pooling2d (MaxPooling2D) (None, 15, 15, 16)        0         \n",
      "_________________________________________________________________\n",
      "conv2d_1 (Conv2D)            (None, 13, 13, 16)        2320      \n",
      "_________________________________________________________________\n",
      "batch_normalization_1 (Batch (None, 13, 13, 16)        64        \n",
      "_________________________________________________________________\n",
      "max_pooling2d_1 (MaxPooling2 (None, 6, 6, 16)          0         \n",
      "_________________________________________________________________\n",
      "conv2d_2 (Conv2D)            (None, 4, 4, 16)          2320      \n",
      "_________________________________________________________________\n",
      "dropout (Dropout)            (None, 4, 4, 16)          0         \n",
      "_________________________________________________________________\n",
      "flatten_1 (Flatten)          (None, 256)               0         \n",
      "_________________________________________________________________\n",
      "dense_6 (Dense)              (None, 256)               65792     \n",
      "_________________________________________________________________\n",
      "dense_7 (Dense)              (None, 128)               32896     \n",
      "_________________________________________________________________\n",
      "dense_8 (Dense)              (None, 10)                1290      \n",
      "=================================================================\n",
      "Total params: 105,194\n",
      "Trainable params: 105,130\n",
      "Non-trainable params: 64\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "#Creating, compiling and analysing the model\n",
    "from tensorflow.keras.layers import Conv2D, MaxPool2D, BatchNormalization, Dropout\n",
    "\n",
    "model_2 = Sequential([\n",
    "    Conv2D(16, kernel_size=(3, 3), input_shape=X_train.shape[1:], activation='relu'),\n",
    "    BatchNormalization(),\n",
    "    MaxPool2D(pool_size=(2, 2)),\n",
    "    Conv2D(16, kernel_size=(3, 3), activation='relu'),\n",
    "    BatchNormalization(),\n",
    "    MaxPool2D(pool_size=(2, 2)),\n",
    "    Conv2D(16, kernel_size=(3, 3), activation='relu'),\n",
    "    Dropout(0.2),\n",
    "    Flatten(),\n",
    "    Dense(256, activation='relu'),\n",
    "    Dense(128, activation='relu'),\n",
    "    Dense(10, activation='softmax')\n",
    "])\n",
    "\n",
    "model_2.compile(optimizer=opt,\n",
    "              loss='categorical_crossentropy',\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "model_2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 62268 samples, validate on 10989 samples\n",
      "Epoch 1/10\n",
      "\n",
      "Epoch 00001: val_loss improved from inf to 0.47640, saving model to best_checkpoint_2\n",
      "62268/62268 - 233s - loss: 0.8309 - accuracy: 0.7322 - val_loss: 0.4764 - val_accuracy: 0.8607\n",
      "Epoch 2/10\n",
      "\n",
      "Epoch 00002: val_loss improved from 0.47640 to 0.40418, saving model to best_checkpoint_2\n",
      "62268/62268 - 229s - loss: 0.4654 - accuracy: 0.8575 - val_loss: 0.4042 - val_accuracy: 0.8799\n",
      "Epoch 3/10\n",
      "\n",
      "Epoch 00003: val_loss improved from 0.40418 to 0.39189, saving model to best_checkpoint_2\n",
      "62268/62268 - 230s - loss: 0.3984 - accuracy: 0.8774 - val_loss: 0.3919 - val_accuracy: 0.8815\n",
      "Epoch 4/10\n",
      "\n",
      "Epoch 00004: val_loss improved from 0.39189 to 0.35151, saving model to best_checkpoint_2\n",
      "62268/62268 - 226s - loss: 0.3561 - accuracy: 0.8902 - val_loss: 0.3515 - val_accuracy: 0.8964\n",
      "Epoch 5/10\n",
      "\n",
      "Epoch 00005: val_loss improved from 0.35151 to 0.34783, saving model to best_checkpoint_2\n",
      "62268/62268 - 226s - loss: 0.3342 - accuracy: 0.8968 - val_loss: 0.3478 - val_accuracy: 0.8964\n",
      "Epoch 6/10\n",
      "\n",
      "Epoch 00006: val_loss did not improve from 0.34783\n",
      "62268/62268 - 226s - loss: 0.3145 - accuracy: 0.9032 - val_loss: 0.3584 - val_accuracy: 0.8942\n",
      "Epoch 7/10\n",
      "\n",
      "Epoch 00007: val_loss improved from 0.34783 to 0.32151, saving model to best_checkpoint_2\n",
      "62268/62268 - 228s - loss: 0.2967 - accuracy: 0.9087 - val_loss: 0.3215 - val_accuracy: 0.9082\n",
      "Epoch 8/10\n",
      "\n",
      "Epoch 00008: val_loss did not improve from 0.32151\n",
      "62268/62268 - 228s - loss: 0.2795 - accuracy: 0.9137 - val_loss: 0.3411 - val_accuracy: 0.8992\n",
      "Epoch 9/10\n",
      "\n",
      "Epoch 00009: val_loss did not improve from 0.32151\n",
      "62268/62268 - 228s - loss: 0.2683 - accuracy: 0.9160 - val_loss: 0.3417 - val_accuracy: 0.9014\n",
      "Epoch 10/10\n",
      "\n",
      "Epoch 00010: val_loss did not improve from 0.32151\n",
      "62268/62268 - 227s - loss: 0.2534 - accuracy: 0.9213 - val_loss: 0.3234 - val_accuracy: 0.9091\n",
      "Epoch 00010: early stopping\n"
     ]
    }
   ],
   "source": [
    "#Creating callback functions and fitting the data with the model\n",
    "best_check_2 = ModelCheckpoint('best_checkpoint_2', monitor='val_loss', verbose=2,\n",
    "                               save_best_only=True, save_weights_only=True)\n",
    "\n",
    "history_2 = model_2.fit(x=X_train, y=y_train, epochs=10, batch_size=128,\n",
    "          verbose=2, validation_split=0.15, callbacks=[early_stopping, best_check_2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " best_checkpoint\t\t\t best_checkpoint.index\r\n",
      " best_checkpoint_2\t\t\t'Capstone Project.ipynb'\r\n",
      " best_checkpoint_2.data-00000-of-00001\t checkpoint\r\n",
      " best_checkpoint_2.index\t\t data\r\n",
      " best_checkpoint.data-00000-of-00001\r\n"
     ]
    }
   ],
   "source": [
    "#Checking the creation of the best_checkpoint_2 file\n",
    "! ls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f8f0c636278>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the loss of the training and validating sets to look for some overfitting pattern\n",
    "df_2 = pd.DataFrame(history_2.history)\n",
    "df_2.plot(y=['loss', 'val_loss'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f90d4d4dd30>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the accuracy of the training and validating sets to look for some overfitting pattern\n",
    "df_2.plot(y=['accuracy', 'val_accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(60.0, 0.5, 'Prediction')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting the confusion matrix to visualize the model quality\n",
    "plt.figure(figsize=(9, 6))\n",
    "sns.heatmap(tf.math.confusion_matrix(np.argmax(model_2.predict(X_test.astype('float32')), axis=1), np.argmax(y_test, axis=1)))\n",
    "plt.xlabel('Label')\n",
    "plt.ylabel('Prediction')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "26032/1 - 28s - loss: 0.3561 - accuracy: 0.8955\n",
      "Test Loss and Test Accuracy for the model: 0.372380012684097, 0.8954747915267944\n"
     ]
    }
   ],
   "source": [
    "#Measuring test loss and accuracy of the model\n",
    "loss, accuracy = model_2.evaluate(x=X_test, y=y_test, batch_size=128, verbose=2)\n",
    "print('Test Loss and Test Accuracy for the model: {}, {}'.format(loss, accuracy))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Get model predictions\n",
    "* Load the best weights for the MLP and CNN models that you saved during the training run.\n",
    "* Randomly select 5 images and corresponding labels from the test set and display the images with their labels.\n",
    "* Alongside the image and label, show each model’s predictive distribution as a bar chart, and the final model prediction given by the label with maximum probability."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7f8f0c2e3908>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reloading weights to the models\n",
    "model.load_weights('./best_checkpoint')\n",
    "model_2.load_weights('./best_checkpoint_2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1152 with 15 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Selecting random examples from the test set, displaying the images, printing the true label, the label predicted\n",
    "#by the first model, the label predicted by the second model and finally plotting the models distribution of labels\n",
    "#for each example\n",
    "random_images = np.random.randint(y_test.shape[0], size=5)\n",
    "\n",
    "labels = np.argmax(y_test[random_images, :], axis=1)\n",
    "\n",
    "model_predictions = model.predict(X_test[random_images, :, :, :])\n",
    "model_2_predictions = model_2.predict(X_test[random_images, :, :, :].astype('float32'))\n",
    "\n",
    "model_labels = np.argmax(model_predictions, axis=1)\n",
    "model_2_labels = np.argmax(model_2_predictions, axis=1)\n",
    "\n",
    "fig, ax = plt.subplots(3, 5, figsize=(20, 16))\n",
    "for i, j in zip(range(5), random_images):\n",
    "    ax[0, i%5].imshow(X_test[j, :, :, :])\n",
    "    ax[0, i%5].axis('off')\n",
    "    ax[0, i%5].set_title('Class: {}; MLP: {}; CNN: {}'.format(labels[i%5], model_labels[i%5],\n",
    "                                                              model_2_labels[i%5]))\n",
    "    \n",
    "    ax[1, i%5].bar(range(10), model_predictions[i%5])\n",
    "    ax[1, i%5].axis('on')\n",
    "    ax[1, i%5].set_title('MLP distribution')\n",
    "    \n",
    "    ax[2, i%5].bar(range(10), model_2_predictions[i%5])\n",
    "    ax[2, i%5].axis('on')\n",
    "    ax[2, i%5].set_title('CNN distribution')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
